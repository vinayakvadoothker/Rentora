{"ast":null,"code":"import { __privateAdd, __privateGet, __privateSet } from \"./chunk-3W5G4CYI.js\";\nvar _loaded, _domain, _proxyUrl, _instance;\nimport { inBrowser } from \"@clerk/shared/browser\";\nimport { deprecated } from \"@clerk/shared/deprecated\";\nimport { handleValueOrFn } from \"@clerk/shared/handleValueOrFn\";\nimport { unsupportedNonBrowserDomainOrProxyUrlFunction } from \"./errors\";\nimport { isConstructor, loadClerkJsScript } from \"./utils\";\nconst _IsomorphicClerk = class _IsomorphicClerk {\n  constructor(options) {\n    var _this = this;\n    this.clerkjs = null;\n    this.preopenSignIn = null;\n    this.preopenSignUp = null;\n    this.preopenUserProfile = null;\n    this.preopenOrganizationProfile = null;\n    this.preopenCreateOrganization = null;\n    this.premountSignInNodes = /* @__PURE__ */new Map();\n    this.premountSignUpNodes = /* @__PURE__ */new Map();\n    this.premountUserProfileNodes = /* @__PURE__ */new Map();\n    this.premountUserButtonNodes = /* @__PURE__ */new Map();\n    this.premountOrganizationProfileNodes = /* @__PURE__ */new Map();\n    this.premountCreateOrganizationNodes = /* @__PURE__ */new Map();\n    this.premountOrganizationSwitcherNodes = /* @__PURE__ */new Map();\n    this.premountOrganizationListNodes = /* @__PURE__ */new Map();\n    this.premountMethodCalls = /* @__PURE__ */new Map();\n    this.loadedListeners = [];\n    __privateAdd(this, _loaded, false);\n    __privateAdd(this, _domain, void 0);\n    __privateAdd(this, _proxyUrl, void 0);\n    this.addOnLoaded = cb => {\n      this.loadedListeners.push(cb);\n    };\n    this.emitLoaded = () => {\n      this.loadedListeners.forEach(cb => cb());\n      this.loadedListeners = [];\n    };\n    this.hydrateClerkJS = clerkjs => {\n      if (!clerkjs) {\n        throw new Error(\"Failed to hydrate latest Clerk JS\");\n      }\n      this.clerkjs = clerkjs;\n      this.premountMethodCalls.forEach(cb => cb());\n      if (this.preopenSignIn !== null) {\n        clerkjs.openSignIn(this.preopenSignIn);\n      }\n      if (this.preopenSignUp !== null) {\n        clerkjs.openSignUp(this.preopenSignUp);\n      }\n      if (this.preopenUserProfile !== null) {\n        clerkjs.openUserProfile(this.preopenUserProfile);\n      }\n      if (this.preopenOrganizationProfile !== null) {\n        clerkjs.openOrganizationProfile(this.preopenOrganizationProfile);\n      }\n      if (this.preopenCreateOrganization !== null) {\n        clerkjs.openCreateOrganization(this.preopenCreateOrganization);\n      }\n      this.premountSignInNodes.forEach((props, node) => {\n        clerkjs.mountSignIn(node, props);\n      });\n      this.premountSignUpNodes.forEach((props, node) => {\n        clerkjs.mountSignUp(node, props);\n      });\n      this.premountUserProfileNodes.forEach((props, node) => {\n        clerkjs.mountUserProfile(node, props);\n      });\n      this.premountUserButtonNodes.forEach((props, node) => {\n        clerkjs.mountUserButton(node, props);\n      });\n      this.premountOrganizationListNodes.forEach((props, node) => {\n        clerkjs.mountOrganizationList(node, props);\n      });\n      __privateSet(this, _loaded, true);\n      this.emitLoaded();\n      return this.clerkjs;\n    };\n    this.__unstable__updateProps = props => {\n      if (this.clerkjs && \"__unstable__updateProps\" in this.clerkjs) {\n        this.clerkjs.__unstable__updateProps(props);\n      } else {\n        return void 0;\n      }\n    };\n    /**\n     * `setActive` can be used to set the active session and/or organization.\n     */\n    this.setActive = _ref => {\n      let {\n        session,\n        organization,\n        beforeEmit\n      } = _ref;\n      if (this.clerkjs) {\n        return this.clerkjs.setActive({\n          session,\n          organization,\n          beforeEmit\n        });\n      } else {\n        return Promise.reject();\n      }\n    };\n    this.setSession = (session, beforeEmit) => {\n      deprecated(\"setSession\", \"Use `Clerk.setActive` instead\");\n      return this.setActive({\n        session,\n        beforeEmit\n      });\n    };\n    this.openSignIn = props => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.openSignIn(props);\n      } else {\n        this.preopenSignIn = props;\n      }\n    };\n    this.closeSignIn = () => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.closeSignIn();\n      } else {\n        this.preopenSignIn = null;\n      }\n    };\n    this.openUserProfile = props => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.openUserProfile(props);\n      } else {\n        this.preopenUserProfile = props;\n      }\n    };\n    this.closeUserProfile = () => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.closeUserProfile();\n      } else {\n        this.preopenUserProfile = null;\n      }\n    };\n    this.openOrganizationProfile = props => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.openOrganizationProfile(props);\n      } else {\n        this.preopenOrganizationProfile = props;\n      }\n    };\n    this.closeOrganizationProfile = () => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.closeOrganizationProfile();\n      } else {\n        this.preopenOrganizationProfile = null;\n      }\n    };\n    this.openCreateOrganization = props => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.openCreateOrganization(props);\n      } else {\n        this.preopenCreateOrganization = props;\n      }\n    };\n    this.closeCreateOrganization = () => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.closeCreateOrganization();\n      } else {\n        this.preopenCreateOrganization = null;\n      }\n    };\n    this.openSignUp = props => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.openSignUp(props);\n      } else {\n        this.preopenSignUp = props;\n      }\n    };\n    this.closeSignUp = () => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.closeSignUp();\n      } else {\n        this.preopenSignUp = null;\n      }\n    };\n    this.mountSignIn = (node, props) => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.mountSignIn(node, props);\n      } else {\n        this.premountSignInNodes.set(node, props);\n      }\n    };\n    this.unmountSignIn = node => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.unmountSignIn(node);\n      } else {\n        this.premountSignInNodes.delete(node);\n      }\n    };\n    this.mountSignUp = (node, props) => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.mountSignUp(node, props);\n      } else {\n        this.premountSignUpNodes.set(node, props);\n      }\n    };\n    this.unmountSignUp = node => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.unmountSignUp(node);\n      } else {\n        this.premountSignUpNodes.delete(node);\n      }\n    };\n    this.mountUserProfile = (node, props) => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.mountUserProfile(node, props);\n      } else {\n        this.premountUserProfileNodes.set(node, props);\n      }\n    };\n    this.unmountUserProfile = node => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.unmountUserProfile(node);\n      } else {\n        this.premountUserProfileNodes.delete(node);\n      }\n    };\n    this.mountOrganizationProfile = (node, props) => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.mountOrganizationProfile(node, props);\n      } else {\n        this.premountOrganizationProfileNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationProfile = node => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.unmountOrganizationProfile(node);\n      } else {\n        this.premountOrganizationProfileNodes.delete(node);\n      }\n    };\n    this.mountCreateOrganization = (node, props) => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.mountCreateOrganization(node, props);\n      } else {\n        this.premountCreateOrganizationNodes.set(node, props);\n      }\n    };\n    this.unmountCreateOrganization = node => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.unmountCreateOrganization(node);\n      } else {\n        this.premountCreateOrganizationNodes.delete(node);\n      }\n    };\n    this.mountOrganizationSwitcher = (node, props) => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.mountOrganizationSwitcher(node, props);\n      } else {\n        this.premountOrganizationSwitcherNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationSwitcher = node => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.unmountOrganizationSwitcher(node);\n      } else {\n        this.premountOrganizationSwitcherNodes.delete(node);\n      }\n    };\n    this.mountOrganizationList = (node, props) => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.mountOrganizationList(node, props);\n      } else {\n        this.premountOrganizationListNodes.set(node, props);\n      }\n    };\n    this.unmountOrganizationList = node => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.unmountOrganizationList(node);\n      } else {\n        this.premountOrganizationListNodes.delete(node);\n      }\n    };\n    this.mountUserButton = (node, userButtonProps) => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.mountUserButton(node, userButtonProps);\n      } else {\n        this.premountUserButtonNodes.set(node, userButtonProps);\n      }\n    };\n    this.unmountUserButton = node => {\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        this.clerkjs.unmountUserButton(node);\n      } else {\n        this.premountUserButtonNodes.delete(node);\n      }\n    };\n    this.addListener = listener => {\n      const callback = () => {\n        var _this$clerkjs;\n        return (_this$clerkjs = this.clerkjs) === null || _this$clerkjs === void 0 ? void 0 : _this$clerkjs.addListener(listener);\n      };\n      if (this.clerkjs) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"addListener\", callback);\n        return () => this.premountMethodCalls.delete(\"addListener\");\n      }\n    };\n    this.navigate = to => {\n      const callback = () => {\n        var _this$clerkjs2;\n        return (_this$clerkjs2 = this.clerkjs) === null || _this$clerkjs2 === void 0 ? void 0 : _this$clerkjs2.navigate(to);\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        void callback();\n      } else {\n        this.premountMethodCalls.set(\"navigate\", callback);\n      }\n    };\n    this.redirectWithAuth = function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n      const callback = () => {\n        var _this$clerkjs3;\n        return (_this$clerkjs3 = _this.clerkjs) === null || _this$clerkjs3 === void 0 ? void 0 : _this$clerkjs3.redirectWithAuth(...args);\n      };\n      if (_this.clerkjs && __privateGet(_this, _loaded)) {\n        void callback();\n      } else {\n        _this.premountMethodCalls.set(\"redirectWithAuth\", callback);\n      }\n    };\n    this.redirectToSignIn = opts => {\n      const callback = () => {\n        var _this$clerkjs4;\n        return (_this$clerkjs4 = this.clerkjs) === null || _this$clerkjs4 === void 0 ? void 0 : _this$clerkjs4.redirectToSignIn(opts);\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        void callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToSignIn\", callback);\n      }\n    };\n    this.redirectToSignUp = opts => {\n      const callback = () => {\n        var _this$clerkjs5;\n        return (_this$clerkjs5 = this.clerkjs) === null || _this$clerkjs5 === void 0 ? void 0 : _this$clerkjs5.redirectToSignUp(opts);\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        void callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToSignUp\", callback);\n      }\n    };\n    this.redirectToUserProfile = () => {\n      const callback = () => {\n        var _this$clerkjs6;\n        return (_this$clerkjs6 = this.clerkjs) === null || _this$clerkjs6 === void 0 ? void 0 : _this$clerkjs6.redirectToUserProfile();\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToUserProfile\", callback);\n      }\n    };\n    this.redirectToHome = () => {\n      const callback = () => {\n        var _this$clerkjs7;\n        return (_this$clerkjs7 = this.clerkjs) === null || _this$clerkjs7 === void 0 ? void 0 : _this$clerkjs7.redirectToHome();\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToHome\", callback);\n      }\n    };\n    this.redirectToOrganizationProfile = () => {\n      const callback = () => {\n        var _this$clerkjs8;\n        return (_this$clerkjs8 = this.clerkjs) === null || _this$clerkjs8 === void 0 ? void 0 : _this$clerkjs8.redirectToOrganizationProfile();\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToOrganizationProfile\", callback);\n      }\n    };\n    this.redirectToCreateOrganization = () => {\n      const callback = () => {\n        var _this$clerkjs9;\n        return (_this$clerkjs9 = this.clerkjs) === null || _this$clerkjs9 === void 0 ? void 0 : _this$clerkjs9.redirectToCreateOrganization();\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        callback();\n      } else {\n        this.premountMethodCalls.set(\"redirectToCreateOrganization\", callback);\n      }\n    };\n    this.handleRedirectCallback = params => {\n      const callback = () => {\n        var _this$clerkjs10;\n        return (_this$clerkjs10 = this.clerkjs) === null || _this$clerkjs10 === void 0 ? void 0 : _this$clerkjs10.handleRedirectCallback(params);\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        var _callback;\n        void ((_callback = callback()) === null || _callback === void 0 ? void 0 : _callback.catch(() => {}));\n      } else {\n        this.premountMethodCalls.set(\"handleRedirectCallback\", callback);\n      }\n    };\n    /**\n     * @deprecated Use `handleEmailLinkVerification` instead.\n     */\n    this.handleMagicLinkVerification = async params => {\n      deprecated(\"handleMagicLinkVerification\", \"Use `handleEmailLinkVerification` instead.\");\n      const callback = () => {\n        var _this$clerkjs11;\n        return (_this$clerkjs11 = this.clerkjs) === null || _this$clerkjs11 === void 0 ? void 0 : _this$clerkjs11.handleMagicLinkVerification(params);\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"handleMagicLinkVerification\", callback);\n      }\n    };\n    this.handleEmailLinkVerification = async params => {\n      const callback = () => {\n        var _this$clerkjs12;\n        return (_this$clerkjs12 = this.clerkjs) === null || _this$clerkjs12 === void 0 ? void 0 : _this$clerkjs12.handleEmailLinkVerification(params);\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"handleEmailLinkVerification\", callback);\n      }\n    };\n    this.authenticateWithMetamask = async params => {\n      const callback = () => {\n        var _this$clerkjs13;\n        return (_this$clerkjs13 = this.clerkjs) === null || _this$clerkjs13 === void 0 ? void 0 : _this$clerkjs13.authenticateWithMetamask(params);\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"authenticateWithMetamask\", callback);\n      }\n    };\n    this.createOrganization = async params => {\n      const callback = () => {\n        var _this$clerkjs14;\n        return (_this$clerkjs14 = this.clerkjs) === null || _this$clerkjs14 === void 0 ? void 0 : _this$clerkjs14.createOrganization(params);\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"createOrganization\", callback);\n      }\n    };\n    this.getOrganizationMemberships = async () => {\n      const callback = () => {\n        var _this$clerkjs15;\n        return (_this$clerkjs15 = this.clerkjs) === null || _this$clerkjs15 === void 0 ? void 0 : _this$clerkjs15.getOrganizationMemberships();\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"getOrganizationMemberships\", callback);\n      }\n    };\n    this.getOrganization = async organizationId => {\n      const callback = () => {\n        var _this$clerkjs16;\n        return (_this$clerkjs16 = this.clerkjs) === null || _this$clerkjs16 === void 0 ? void 0 : _this$clerkjs16.getOrganization(organizationId);\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"getOrganization\", callback);\n      }\n    };\n    this.signOut = async (signOutCallbackOrOptions, options) => {\n      const callback = () => {\n        var _this$clerkjs17;\n        return (_this$clerkjs17 = this.clerkjs) === null || _this$clerkjs17 === void 0 ? void 0 : _this$clerkjs17.signOut(signOutCallbackOrOptions, options);\n      };\n      if (this.clerkjs && __privateGet(this, _loaded)) {\n        return callback();\n      } else {\n        this.premountMethodCalls.set(\"signOut\", callback);\n      }\n    };\n    const {\n      Clerk = null,\n      frontendApi,\n      publishableKey\n    } = options || {};\n    this.frontendApi = frontendApi;\n    this.publishableKey = publishableKey;\n    __privateSet(this, _proxyUrl, options === null || options === void 0 ? void 0 : options.proxyUrl);\n    __privateSet(this, _domain, options === null || options === void 0 ? void 0 : options.domain);\n    this.options = options;\n    this.Clerk = Clerk;\n    this.mode = inBrowser() ? \"browser\" : \"server\";\n    void this.loadClerkJS();\n  }\n  get loaded() {\n    return __privateGet(this, _loaded);\n  }\n  static getOrCreateInstance(options) {\n    if (!inBrowser() || !__privateGet(this, _instance) || options.Clerk && __privateGet(this, _instance).Clerk !== options.Clerk) {\n      __privateSet(this, _instance, new _IsomorphicClerk(options));\n    }\n    return __privateGet(this, _instance);\n  }\n  get domain() {\n    if (typeof window !== \"undefined\" && window.location) {\n      return handleValueOrFn(__privateGet(this, _domain), new URL(window.location.href), \"\");\n    }\n    if (typeof __privateGet(this, _domain) === \"function\") {\n      throw new Error(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return __privateGet(this, _domain) || \"\";\n  }\n  get proxyUrl() {\n    if (typeof window !== \"undefined\" && window.location) {\n      return handleValueOrFn(__privateGet(this, _proxyUrl), new URL(window.location.href), \"\");\n    }\n    if (typeof __privateGet(this, _proxyUrl) === \"function\") {\n      throw new Error(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return __privateGet(this, _proxyUrl) || \"\";\n  }\n  async loadClerkJS() {\n    if (this.mode !== \"browser\" || __privateGet(this, _loaded)) {\n      return;\n    }\n    if (typeof window !== \"undefined\") {\n      window.__clerk_frontend_api = this.frontendApi;\n      window.__clerk_publishable_key = this.publishableKey;\n      window.__clerk_proxy_url = this.proxyUrl;\n      window.__clerk_domain = this.domain;\n    }\n    try {\n      var _this$options$sdkMeta, _global$Clerk, _global$Clerk2;\n      if (this.Clerk) {\n        let c;\n        if (isConstructor(this.Clerk)) {\n          c = new this.Clerk(this.publishableKey || this.frontendApi || \"\", {\n            proxyUrl: this.proxyUrl,\n            domain: this.domain\n          });\n          await c.load(this.options);\n        } else {\n          c = this.Clerk;\n          if (!c.isReady()) {\n            await c.load(this.options);\n          }\n        }\n        global.Clerk = c;\n      } else {\n        if (!global.Clerk) {\n          await loadClerkJsScript({\n            ...this.options,\n            frontendApi: this.frontendApi,\n            publishableKey: this.publishableKey,\n            proxyUrl: this.proxyUrl,\n            domain: this.domain\n          });\n        }\n        if (!global.Clerk) {\n          throw new Error(\"Failed to download latest ClerkJS. Contact support@clerk.com.\");\n        }\n        await global.Clerk.load(this.options);\n      }\n      global.Clerk.sdkMetadata = (_this$options$sdkMeta = this.options.sdkMetadata) !== null && _this$options$sdkMeta !== void 0 ? _this$options$sdkMeta : {\n        name: \"@clerk/clerk-react\",\n        version: \"4.28.1\"\n      };\n      if ((_global$Clerk = global.Clerk) !== null && _global$Clerk !== void 0 && _global$Clerk.loaded || (_global$Clerk2 = global.Clerk) !== null && _global$Clerk2 !== void 0 && _global$Clerk2.isReady()) {\n        return this.hydrateClerkJS(global.Clerk);\n      }\n      return;\n    } catch (err) {\n      const error = err;\n      if (process.env.NODE_ENV === \"production\") {\n        console.error(error.stack || error.message || error);\n      } else {\n        throw err;\n      }\n      return;\n    }\n  }\n  get version() {\n    var _this$clerkjs18;\n    return (_this$clerkjs18 = this.clerkjs) === null || _this$clerkjs18 === void 0 ? void 0 : _this$clerkjs18.version;\n  }\n  get client() {\n    if (this.clerkjs) {\n      return this.clerkjs.client;\n    } else {\n      return void 0;\n    }\n  }\n  get session() {\n    if (this.clerkjs) {\n      return this.clerkjs.session;\n    } else {\n      return void 0;\n    }\n  }\n  get user() {\n    if (this.clerkjs) {\n      return this.clerkjs.user;\n    } else {\n      return void 0;\n    }\n  }\n  get organization() {\n    if (this.clerkjs) {\n      return this.clerkjs.organization;\n    } else {\n      return void 0;\n    }\n  }\n  get __unstable__environment() {\n    if (this.clerkjs) {\n      return this.clerkjs.__unstable__environment;\n    } else {\n      return void 0;\n    }\n  }\n  __unstable__setEnvironment() {\n    if (this.clerkjs && \"__unstable__setEnvironment\" in this.clerkjs) {\n      for (var _len2 = arguments.length, args = new Array(_len2), _key2 = 0; _key2 < _len2; _key2++) {\n        args[_key2] = arguments[_key2];\n      }\n      this.clerkjs.__unstable__setEnvironment(args);\n    } else {\n      return void 0;\n    }\n  }\n};\n_loaded = new WeakMap();\n_domain = new WeakMap();\n_proxyUrl = new WeakMap();\n_instance = new WeakMap();\n__privateAdd(_IsomorphicClerk, _instance, void 0);\nlet IsomorphicClerk = _IsomorphicClerk;\nexport { IsomorphicClerk as default };","map":{"version":3,"names":["_loaded","_domain","_proxyUrl","_instance","inBrowser","deprecated","handleValueOrFn","unsupportedNonBrowserDomainOrProxyUrlFunction","isConstructor","loadClerkJsScript","_IsomorphicClerk","constructor","options","_this","clerkjs","preopenSignIn","preopenSignUp","preopenUserProfile","preopenOrganizationProfile","preopenCreateOrganization","premountSignInNodes","Map","premountSignUpNodes","premountUserProfileNodes","premountUserButtonNodes","premountOrganizationProfileNodes","premountCreateOrganizationNodes","premountOrganizationSwitcherNodes","premountOrganizationListNodes","premountMethodCalls","loadedListeners","__privateAdd","addOnLoaded","cb","push","emitLoaded","forEach","hydrateClerkJS","Error","openSignIn","openSignUp","openUserProfile","openOrganizationProfile","openCreateOrganization","props","node","mountSignIn","mountSignUp","mountUserProfile","mountUserButton","mountOrganizationList","__privateSet","__unstable__updateProps","setActive","_ref","session","organization","beforeEmit","Promise","reject","setSession","__privateGet","closeSignIn","closeUserProfile","closeOrganizationProfile","closeCreateOrganization","closeSignUp","set","unmountSignIn","delete","unmountSignUp","unmountUserProfile","mountOrganizationProfile","unmountOrganizationProfile","mountCreateOrganization","unmountCreateOrganization","mountOrganizationSwitcher","unmountOrganizationSwitcher","unmountOrganizationList","userButtonProps","unmountUserButton","addListener","listener","callback","_this$clerkjs","navigate","to","_this$clerkjs2","redirectWithAuth","_len","arguments","length","args","Array","_key","_this$clerkjs3","redirectToSignIn","opts","_this$clerkjs4","redirectToSignUp","_this$clerkjs5","redirectToUserProfile","_this$clerkjs6","redirectToHome","_this$clerkjs7","redirectToOrganizationProfile","_this$clerkjs8","redirectToCreateOrganization","_this$clerkjs9","handleRedirectCallback","params","_this$clerkjs10","_callback","catch","handleMagicLinkVerification","_this$clerkjs11","handleEmailLinkVerification","_this$clerkjs12","authenticateWithMetamask","_this$clerkjs13","createOrganization","_this$clerkjs14","getOrganizationMemberships","_this$clerkjs15","getOrganization","organizationId","_this$clerkjs16","signOut","signOutCallbackOrOptions","_this$clerkjs17","Clerk","frontendApi","publishableKey","proxyUrl","domain","mode","loadClerkJS","loaded","getOrCreateInstance","window","location","URL","href","__clerk_frontend_api","__clerk_publishable_key","__clerk_proxy_url","__clerk_domain","_this$options$sdkMeta","_global$Clerk","_global$Clerk2","c","load","isReady","global","sdkMetadata","name","version","err","error","process","env","NODE_ENV","console","stack","message","_this$clerkjs18","client","user","__unstable__environment","__unstable__setEnvironment","_len2","_key2","WeakMap","IsomorphicClerk"],"sources":["/Users/vvadooth/Documents/Rentora/rentora-website/node_modules/@clerk/clerk-react/src/isomorphicClerk.ts"],"sourcesContent":["import { inBrowser } from '@clerk/shared/browser';\nimport { deprecated } from '@clerk/shared/deprecated';\nimport { handleValueOrFn } from '@clerk/shared/handleValueOrFn';\nimport type {\n  ActiveSessionResource,\n  AuthenticateWithMetamaskParams,\n  BeforeEmitCallback,\n  Clerk,\n  ClientResource,\n  CreateOrganizationParams,\n  CreateOrganizationProps,\n  DomainOrProxyUrl,\n  HandleEmailLinkVerificationParams,\n  HandleMagicLinkVerificationParams,\n  HandleOAuthCallbackParams,\n  ListenerCallback,\n  OrganizationListProps,\n  OrganizationMembershipResource,\n  OrganizationResource,\n  SetActiveParams,\n  SignInProps,\n  SignInRedirectOptions,\n  SignOut,\n  SignOutCallback,\n  SignOutOptions,\n  SignUpProps,\n  SignUpRedirectOptions,\n  UnsubscribeCallback,\n  UserButtonProps,\n  UserProfileProps,\n  UserResource,\n} from '@clerk/types';\nimport type { OrganizationProfileProps, OrganizationSwitcherProps } from '@clerk/types';\n\nimport { unsupportedNonBrowserDomainOrProxyUrlFunction } from './errors';\nimport type {\n  BrowserClerk,\n  BrowserClerkConstructor,\n  ClerkProp,\n  HeadlessBrowserClerk,\n  HeadlessBrowserClerkConstrutor,\n  IsomorphicClerkOptions,\n} from './types';\nimport { isConstructor, loadClerkJsScript } from './utils';\n\nexport interface Global {\n  Clerk?: HeadlessBrowserClerk | BrowserClerk;\n}\n\ndeclare const global: Global;\n\ntype GenericFunction<TArgs = never> = (...args: TArgs[]) => unknown;\n\ntype MethodName<T> = {\n  [P in keyof T]: T[P] extends GenericFunction ? P : never;\n}[keyof T];\n\ntype MethodCallback = () => Promise<unknown> | unknown;\n\nexport default class IsomorphicClerk {\n  private readonly mode: 'browser' | 'server';\n  private readonly frontendApi?: string;\n  private readonly publishableKey?: string;\n  private readonly options: IsomorphicClerkOptions;\n  private readonly Clerk: ClerkProp;\n  private clerkjs: BrowserClerk | HeadlessBrowserClerk | null = null;\n  private preopenSignIn?: null | SignInProps = null;\n  private preopenSignUp?: null | SignUpProps = null;\n  private preopenUserProfile?: null | UserProfileProps = null;\n  private preopenOrganizationProfile?: null | OrganizationProfileProps = null;\n  private preopenCreateOrganization?: null | CreateOrganizationProps = null;\n  private premountSignInNodes = new Map<HTMLDivElement, SignInProps>();\n  private premountSignUpNodes = new Map<HTMLDivElement, SignUpProps>();\n  private premountUserProfileNodes = new Map<HTMLDivElement, UserProfileProps>();\n  private premountUserButtonNodes = new Map<HTMLDivElement, UserButtonProps>();\n  private premountOrganizationProfileNodes = new Map<HTMLDivElement, OrganizationProfileProps>();\n  private premountCreateOrganizationNodes = new Map<HTMLDivElement, CreateOrganizationProps>();\n  private premountOrganizationSwitcherNodes = new Map<HTMLDivElement, OrganizationSwitcherProps>();\n  private premountOrganizationListNodes = new Map<HTMLDivElement, OrganizationListProps>();\n  private premountMethodCalls = new Map<MethodName<BrowserClerk>, MethodCallback>();\n  private loadedListeners: Array<() => void> = [];\n\n  #loaded = false;\n  #domain: DomainOrProxyUrl['domain'];\n  #proxyUrl: DomainOrProxyUrl['proxyUrl'];\n\n  get loaded(): boolean {\n    return this.#loaded;\n  }\n\n  static #instance: IsomorphicClerk;\n\n  static getOrCreateInstance(options: IsomorphicClerkOptions) {\n    // During SSR: a new instance should be created for every request\n    // During CSR: use the cached instance for the whole lifetime of the app\n    // Also will recreate the instance if the provided Clerk instance changes\n    // This method should be idempotent in both scenarios\n    if (!inBrowser() || !this.#instance || (options.Clerk && this.#instance.Clerk !== options.Clerk)) {\n      this.#instance = new IsomorphicClerk(options);\n    }\n    return this.#instance;\n  }\n\n  get domain(): string {\n    // This getter can run in environments where window is not available.\n    // In those cases we should expect and use domain as a string\n    if (typeof window !== 'undefined' && window.location) {\n      return handleValueOrFn(this.#domain, new URL(window.location.href), '');\n    }\n    if (typeof this.#domain === 'function') {\n      throw new Error(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return this.#domain || '';\n  }\n\n  get proxyUrl(): string {\n    // This getter can run in environments where window is not available.\n    // In those cases we should expect and use proxy as a string\n    if (typeof window !== 'undefined' && window.location) {\n      return handleValueOrFn(this.#proxyUrl, new URL(window.location.href), '');\n    }\n    if (typeof this.#proxyUrl === 'function') {\n      throw new Error(unsupportedNonBrowserDomainOrProxyUrlFunction);\n    }\n    return this.#proxyUrl || '';\n  }\n\n  constructor(options: IsomorphicClerkOptions) {\n    const { Clerk = null, frontendApi, publishableKey } = options || {};\n    this.frontendApi = frontendApi;\n    this.publishableKey = publishableKey;\n    this.#proxyUrl = options?.proxyUrl;\n    this.#domain = options?.domain;\n    this.options = options;\n    this.Clerk = Clerk;\n    this.mode = inBrowser() ? 'browser' : 'server';\n    void this.loadClerkJS();\n  }\n\n  async loadClerkJS(): Promise<HeadlessBrowserClerk | BrowserClerk | undefined> {\n    if (this.mode !== 'browser' || this.#loaded) {\n      return;\n    }\n\n    // Store frontendAPI value on window as a fallback. This value can be used as a\n    // fallback during ClerkJS hot loading in case ClerkJS fails to find the\n    // \"data-clerk-frontend-api\" attribute on its script tag.\n\n    // This can happen when the DOM is altered completely during client rehydration.\n    // For example, in Remix with React 18 the document changes completely via `hydrateRoot(document)`.\n\n    // For more information refer to:\n    // - https://github.com/remix-run/remix/issues/2947\n    // - https://github.com/facebook/react/issues/24430\n    if (typeof window !== 'undefined') {\n      window.__clerk_frontend_api = this.frontendApi;\n      window.__clerk_publishable_key = this.publishableKey;\n      window.__clerk_proxy_url = this.proxyUrl;\n      window.__clerk_domain = this.domain;\n    }\n\n    try {\n      if (this.Clerk) {\n        // Set a fixed Clerk version\n        let c: ClerkProp;\n\n        if (isConstructor<BrowserClerkConstructor | HeadlessBrowserClerkConstrutor>(this.Clerk)) {\n          // Construct a new Clerk object if a constructor is passed\n          c = new this.Clerk(this.publishableKey || this.frontendApi || '', {\n            proxyUrl: this.proxyUrl,\n            domain: this.domain,\n          } as any);\n          await c.load(this.options);\n        } else {\n          // Otherwise use the instantiated Clerk object\n          c = this.Clerk;\n\n          if (!c.isReady()) {\n            await c.load(this.options);\n          }\n        }\n\n        global.Clerk = c;\n      } else {\n        // Hot-load latest ClerkJS from Clerk CDN\n        if (!global.Clerk) {\n          await loadClerkJsScript({\n            ...this.options,\n            frontendApi: this.frontendApi,\n            publishableKey: this.publishableKey,\n            proxyUrl: this.proxyUrl,\n            domain: this.domain,\n          });\n        }\n\n        if (!global.Clerk) {\n          throw new Error('Failed to download latest ClerkJS. Contact support@clerk.com.');\n        }\n\n        await global.Clerk.load(this.options);\n      }\n\n      global.Clerk.sdkMetadata = this.options.sdkMetadata ?? { name: PACKAGE_NAME, version: PACKAGE_VERSION };\n\n      if (global.Clerk?.loaded || global.Clerk?.isReady()) {\n        return this.hydrateClerkJS(global.Clerk);\n      }\n      return;\n    } catch (err) {\n      const error = err as Error;\n      // In Next.js we can throw a full screen error in development mode.\n      // However, in production throwing an error results in an infinite loop.\n      // More info at: https://github.com/vercel/next.js/issues/6973\n      if (process.env.NODE_ENV === 'production') {\n        console.error(error.stack || error.message || error);\n      } else {\n        throw err;\n      }\n      return;\n    }\n  }\n\n  public addOnLoaded = (cb: () => void) => {\n    this.loadedListeners.push(cb);\n  };\n\n  public emitLoaded = () => {\n    this.loadedListeners.forEach(cb => cb());\n    this.loadedListeners = [];\n  };\n\n  private hydrateClerkJS = (clerkjs: BrowserClerk | HeadlessBrowserClerk | undefined) => {\n    if (!clerkjs) {\n      throw new Error('Failed to hydrate latest Clerk JS');\n    }\n\n    this.clerkjs = clerkjs;\n\n    this.premountMethodCalls.forEach(cb => cb());\n\n    if (this.preopenSignIn !== null) {\n      clerkjs.openSignIn(this.preopenSignIn);\n    }\n\n    if (this.preopenSignUp !== null) {\n      clerkjs.openSignUp(this.preopenSignUp);\n    }\n\n    if (this.preopenUserProfile !== null) {\n      clerkjs.openUserProfile(this.preopenUserProfile);\n    }\n\n    if (this.preopenOrganizationProfile !== null) {\n      clerkjs.openOrganizationProfile(this.preopenOrganizationProfile);\n    }\n\n    if (this.preopenCreateOrganization !== null) {\n      clerkjs.openCreateOrganization(this.preopenCreateOrganization);\n    }\n\n    this.premountSignInNodes.forEach((props: SignInProps, node: HTMLDivElement) => {\n      clerkjs.mountSignIn(node, props);\n    });\n\n    this.premountSignUpNodes.forEach((props: SignUpProps, node: HTMLDivElement) => {\n      clerkjs.mountSignUp(node, props);\n    });\n\n    this.premountUserProfileNodes.forEach((props: UserProfileProps, node: HTMLDivElement) => {\n      clerkjs.mountUserProfile(node, props);\n    });\n\n    this.premountUserButtonNodes.forEach((props: UserButtonProps, node: HTMLDivElement) => {\n      clerkjs.mountUserButton(node, props);\n    });\n\n    this.premountOrganizationListNodes.forEach((props: OrganizationListProps, node: HTMLDivElement) => {\n      clerkjs.mountOrganizationList(node, props);\n    });\n\n    this.#loaded = true;\n    this.emitLoaded();\n    return this.clerkjs;\n  };\n\n  get version(): string | undefined {\n    return this.clerkjs?.version;\n  }\n\n  get client(): ClientResource | undefined {\n    if (this.clerkjs) {\n      return this.clerkjs.client;\n      // TODO: add ssr condition\n    } else {\n      return undefined;\n    }\n  }\n\n  get session(): ActiveSessionResource | undefined | null {\n    if (this.clerkjs) {\n      return this.clerkjs.session;\n    } else {\n      return undefined;\n    }\n  }\n\n  get user(): UserResource | undefined | null {\n    if (this.clerkjs) {\n      return this.clerkjs.user;\n    } else {\n      return undefined;\n    }\n  }\n\n  get organization(): OrganizationResource | undefined | null {\n    if (this.clerkjs) {\n      return this.clerkjs.organization;\n    } else {\n      return undefined;\n    }\n  }\n\n  get __unstable__environment(): any {\n    if (this.clerkjs) {\n      return (this.clerkjs as any).__unstable__environment;\n      // TODO: add ssr condition\n    } else {\n      return undefined;\n    }\n  }\n\n  __unstable__setEnvironment(...args: any): void {\n    if (this.clerkjs && '__unstable__setEnvironment' in this.clerkjs) {\n      (this.clerkjs as any).__unstable__setEnvironment(args);\n    } else {\n      return undefined;\n    }\n  }\n\n  __unstable__updateProps = (props: any): any => {\n    // Handle case where accounts has clerk-react@4 installed, but clerk-js@3 is manually loaded\n    if (this.clerkjs && '__unstable__updateProps' in this.clerkjs) {\n      (this.clerkjs as any).__unstable__updateProps(props);\n    } else {\n      return undefined;\n    }\n  };\n\n  /**\n   * `setActive` can be used to set the active session and/or organization.\n   */\n  setActive = ({ session, organization, beforeEmit }: SetActiveParams): Promise<void> => {\n    if (this.clerkjs) {\n      return this.clerkjs.setActive({ session, organization, beforeEmit });\n    } else {\n      return Promise.reject();\n    }\n  };\n\n  setSession = (session: ActiveSessionResource | string | null, beforeEmit?: BeforeEmitCallback): Promise<void> => {\n    deprecated('setSession', 'Use `Clerk.setActive` instead');\n    return this.setActive({ session, beforeEmit });\n  };\n\n  openSignIn = (props?: SignInProps): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.openSignIn(props);\n    } else {\n      this.preopenSignIn = props;\n    }\n  };\n\n  closeSignIn = (): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.closeSignIn();\n    } else {\n      this.preopenSignIn = null;\n    }\n  };\n\n  openUserProfile = (props?: UserProfileProps): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.openUserProfile(props);\n    } else {\n      this.preopenUserProfile = props;\n    }\n  };\n\n  closeUserProfile = (): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.closeUserProfile();\n    } else {\n      this.preopenUserProfile = null;\n    }\n  };\n\n  openOrganizationProfile = (props?: OrganizationProfileProps): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.openOrganizationProfile(props);\n    } else {\n      this.preopenOrganizationProfile = props;\n    }\n  };\n\n  closeOrganizationProfile = (): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.closeOrganizationProfile();\n    } else {\n      this.preopenOrganizationProfile = null;\n    }\n  };\n\n  openCreateOrganization = (props?: CreateOrganizationProps): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.openCreateOrganization(props);\n    } else {\n      this.preopenCreateOrganization = props;\n    }\n  };\n\n  closeCreateOrganization = (): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.closeCreateOrganization();\n    } else {\n      this.preopenCreateOrganization = null;\n    }\n  };\n\n  openSignUp = (props?: SignUpProps): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.openSignUp(props);\n    } else {\n      this.preopenSignUp = props;\n    }\n  };\n\n  closeSignUp = (): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.closeSignUp();\n    } else {\n      this.preopenSignUp = null;\n    }\n  };\n\n  mountSignIn = (node: HTMLDivElement, props: SignInProps): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountSignIn(node, props);\n    } else {\n      this.premountSignInNodes.set(node, props);\n    }\n  };\n\n  unmountSignIn = (node: HTMLDivElement): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountSignIn(node);\n    } else {\n      this.premountSignInNodes.delete(node);\n    }\n  };\n\n  mountSignUp = (node: HTMLDivElement, props: SignUpProps): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountSignUp(node, props);\n    } else {\n      this.premountSignUpNodes.set(node, props);\n    }\n  };\n\n  unmountSignUp = (node: HTMLDivElement): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountSignUp(node);\n    } else {\n      this.premountSignUpNodes.delete(node);\n    }\n  };\n\n  mountUserProfile = (node: HTMLDivElement, props: UserProfileProps): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountUserProfile(node, props);\n    } else {\n      this.premountUserProfileNodes.set(node, props);\n    }\n  };\n\n  unmountUserProfile = (node: HTMLDivElement): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountUserProfile(node);\n    } else {\n      this.premountUserProfileNodes.delete(node);\n    }\n  };\n\n  mountOrganizationProfile = (node: HTMLDivElement, props: OrganizationProfileProps): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountOrganizationProfile(node, props);\n    } else {\n      this.premountOrganizationProfileNodes.set(node, props);\n    }\n  };\n\n  unmountOrganizationProfile = (node: HTMLDivElement): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountOrganizationProfile(node);\n    } else {\n      this.premountOrganizationProfileNodes.delete(node);\n    }\n  };\n\n  mountCreateOrganization = (node: HTMLDivElement, props: CreateOrganizationProps): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountCreateOrganization(node, props);\n    } else {\n      this.premountCreateOrganizationNodes.set(node, props);\n    }\n  };\n\n  unmountCreateOrganization = (node: HTMLDivElement): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountCreateOrganization(node);\n    } else {\n      this.premountCreateOrganizationNodes.delete(node);\n    }\n  };\n\n  mountOrganizationSwitcher = (node: HTMLDivElement, props: OrganizationSwitcherProps): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountOrganizationSwitcher(node, props);\n    } else {\n      this.premountOrganizationSwitcherNodes.set(node, props);\n    }\n  };\n\n  unmountOrganizationSwitcher = (node: HTMLDivElement): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountOrganizationSwitcher(node);\n    } else {\n      this.premountOrganizationSwitcherNodes.delete(node);\n    }\n  };\n\n  mountOrganizationList = (node: HTMLDivElement, props: OrganizationListProps): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountOrganizationList(node, props);\n    } else {\n      this.premountOrganizationListNodes.set(node, props);\n    }\n  };\n\n  unmountOrganizationList = (node: HTMLDivElement): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountOrganizationList(node);\n    } else {\n      this.premountOrganizationListNodes.delete(node);\n    }\n  };\n\n  mountUserButton = (node: HTMLDivElement, userButtonProps: UserButtonProps): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.mountUserButton(node, userButtonProps);\n    } else {\n      this.premountUserButtonNodes.set(node, userButtonProps);\n    }\n  };\n\n  unmountUserButton = (node: HTMLDivElement): void => {\n    if (this.clerkjs && this.#loaded) {\n      this.clerkjs.unmountUserButton(node);\n    } else {\n      this.premountUserButtonNodes.delete(node);\n    }\n  };\n\n  addListener = (listener: ListenerCallback): UnsubscribeCallback => {\n    const callback = () => this.clerkjs?.addListener(listener);\n\n    if (this.clerkjs) {\n      return callback() as UnsubscribeCallback;\n    } else {\n      this.premountMethodCalls.set('addListener', callback);\n      return () => this.premountMethodCalls.delete('addListener');\n    }\n  };\n\n  navigate = (to: string): void => {\n    const callback = () => this.clerkjs?.navigate(to);\n    if (this.clerkjs && this.#loaded) {\n      void callback();\n    } else {\n      this.premountMethodCalls.set('navigate', callback);\n    }\n  };\n\n  redirectWithAuth = (...args: Parameters<Clerk['redirectWithAuth']>): void => {\n    const callback = () => this.clerkjs?.redirectWithAuth(...args);\n    if (this.clerkjs && this.#loaded) {\n      void callback();\n    } else {\n      this.premountMethodCalls.set('redirectWithAuth', callback);\n    }\n  };\n\n  redirectToSignIn = (opts: SignInRedirectOptions): void => {\n    const callback = () => this.clerkjs?.redirectToSignIn(opts as any);\n    if (this.clerkjs && this.#loaded) {\n      void callback();\n    } else {\n      this.premountMethodCalls.set('redirectToSignIn', callback);\n    }\n  };\n\n  redirectToSignUp = (opts: SignUpRedirectOptions): void => {\n    const callback = () => this.clerkjs?.redirectToSignUp(opts as any);\n    if (this.clerkjs && this.#loaded) {\n      void callback();\n    } else {\n      this.premountMethodCalls.set('redirectToSignUp', callback);\n    }\n  };\n\n  redirectToUserProfile = (): void => {\n    const callback = () => this.clerkjs?.redirectToUserProfile();\n    if (this.clerkjs && this.#loaded) {\n      callback();\n    } else {\n      this.premountMethodCalls.set('redirectToUserProfile', callback);\n    }\n  };\n\n  redirectToHome = (): void => {\n    const callback = () => this.clerkjs?.redirectToHome();\n    if (this.clerkjs && this.#loaded) {\n      callback();\n    } else {\n      this.premountMethodCalls.set('redirectToHome', callback);\n    }\n  };\n\n  redirectToOrganizationProfile = (): void => {\n    const callback = () => this.clerkjs?.redirectToOrganizationProfile();\n    if (this.clerkjs && this.#loaded) {\n      callback();\n    } else {\n      this.premountMethodCalls.set('redirectToOrganizationProfile', callback);\n    }\n  };\n\n  redirectToCreateOrganization = (): void => {\n    const callback = () => this.clerkjs?.redirectToCreateOrganization();\n    if (this.clerkjs && this.#loaded) {\n      callback();\n    } else {\n      this.premountMethodCalls.set('redirectToCreateOrganization', callback);\n    }\n  };\n\n  handleRedirectCallback = (params: HandleOAuthCallbackParams): void => {\n    const callback = () => this.clerkjs?.handleRedirectCallback(params);\n    if (this.clerkjs && this.#loaded) {\n      void callback()?.catch(() => {\n        // This error is caused when the host app is using React18\n        // and strictMode is enabled. This useEffects runs twice because\n        // the clerk-react ui components mounts, unmounts and mounts again\n        // so the clerk-js component loses its state because of the custom\n        // unmount callback we're using.\n        // This needs to be solved by tweaking the logic in uiComponents.tsx\n        // or by making handleRedirectCallback idempotent\n      });\n    } else {\n      this.premountMethodCalls.set('handleRedirectCallback', callback);\n    }\n  };\n  /**\n   * @deprecated Use `handleEmailLinkVerification` instead.\n   */\n  handleMagicLinkVerification = async (params: HandleMagicLinkVerificationParams): Promise<void> => {\n    deprecated('handleMagicLinkVerification', 'Use `handleEmailLinkVerification` instead.');\n    const callback = () => this.clerkjs?.handleMagicLinkVerification(params);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('handleMagicLinkVerification', callback);\n    }\n  };\n\n  handleEmailLinkVerification = async (params: HandleEmailLinkVerificationParams): Promise<void> => {\n    const callback = () => this.clerkjs?.handleEmailLinkVerification(params);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('handleEmailLinkVerification', callback);\n    }\n  };\n\n  authenticateWithMetamask = async (params: AuthenticateWithMetamaskParams): Promise<void> => {\n    const callback = () => this.clerkjs?.authenticateWithMetamask(params);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('authenticateWithMetamask', callback);\n    }\n  };\n\n  createOrganization = async (params: CreateOrganizationParams): Promise<OrganizationResource | void> => {\n    const callback = () => this.clerkjs?.createOrganization(params);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<OrganizationResource>;\n    } else {\n      this.premountMethodCalls.set('createOrganization', callback);\n    }\n  };\n\n  getOrganizationMemberships = async (): Promise<OrganizationMembershipResource[] | void> => {\n    const callback = () => this.clerkjs?.getOrganizationMemberships();\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<OrganizationMembershipResource[]>;\n    } else {\n      this.premountMethodCalls.set('getOrganizationMemberships', callback);\n    }\n  };\n\n  getOrganization = async (organizationId: string): Promise<OrganizationResource | void> => {\n    const callback = () => this.clerkjs?.getOrganization(organizationId);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<OrganizationResource>;\n    } else {\n      this.premountMethodCalls.set('getOrganization', callback);\n    }\n  };\n\n  signOut: SignOut = async (\n    signOutCallbackOrOptions?: SignOutCallback | SignOutOptions,\n    options?: SignOutOptions,\n  ): Promise<void> => {\n    const callback = () => this.clerkjs?.signOut(signOutCallbackOrOptions as any, options);\n    if (this.clerkjs && this.#loaded) {\n      return callback() as Promise<void>;\n    } else {\n      this.premountMethodCalls.set('signOut', callback);\n    }\n  };\n}\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}