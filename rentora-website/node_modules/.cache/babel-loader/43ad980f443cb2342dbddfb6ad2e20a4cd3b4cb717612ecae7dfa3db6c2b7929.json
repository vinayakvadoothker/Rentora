{"ast":null,"code":"import \"../chunk-3W5G4CYI.js\";\nimport { useCallback } from \"react\";\nimport { useAuthContext } from \"../contexts/AuthContext\";\nimport { useIsomorphicClerkContext } from \"../contexts/IsomorphicClerkContext\";\nimport { invalidStateError } from \"../errors\";\nimport { createGetToken, createSignOut } from \"./utils\";\nconst useAuth = () => {\n  const {\n    sessionId,\n    userId,\n    actor,\n    orgId,\n    orgRole,\n    orgSlug\n  } = useAuthContext();\n  const isomorphicClerk = useIsomorphicClerkContext();\n  const getToken = useCallback(createGetToken(isomorphicClerk), [isomorphicClerk]);\n  const signOut = useCallback(createSignOut(isomorphicClerk), [isomorphicClerk]);\n  const has = useCallback(params => {\n    if (!orgId || !userId || !orgRole) {\n      return false;\n    }\n    if (!params) {\n      return false;\n    }\n    if (params.role) {\n      return orgRole === params.role;\n    }\n    return false;\n  }, [orgId, orgRole, userId]);\n  if (sessionId === void 0 && userId === void 0) {\n    return {\n      isLoaded: false,\n      isSignedIn: void 0,\n      sessionId,\n      userId,\n      actor: void 0,\n      orgId: void 0,\n      orgRole: void 0,\n      orgSlug: void 0,\n      experimental__has: () => false,\n      signOut,\n      getToken\n    };\n  }\n  if (sessionId === null && userId === null) {\n    return {\n      isLoaded: true,\n      isSignedIn: false,\n      sessionId,\n      userId,\n      actor: null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      experimental__has: () => false,\n      signOut,\n      getToken\n    };\n  }\n  if (!!sessionId && !!userId && !!orgId && !!orgRole) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId,\n      orgRole,\n      orgSlug: orgSlug || null,\n      experimental__has: has,\n      signOut,\n      getToken\n    };\n  }\n  if (!!sessionId && !!userId && !orgId) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      experimental__has: () => false,\n      signOut,\n      getToken\n    };\n  }\n  throw new Error(invalidStateError);\n};\nexport { useAuth };","map":{"version":3,"names":["useCallback","useAuthContext","useIsomorphicClerkContext","invalidStateError","createGetToken","createSignOut","useAuth","sessionId","userId","actor","orgId","orgRole","orgSlug","isomorphicClerk","getToken","signOut","has","params","role","isLoaded","isSignedIn","experimental__has","Error"],"sources":["/Users/vvadooth/Documents/Rentora/rentora-website/node_modules/@clerk/clerk-react/src/hooks/useAuth.ts"],"sourcesContent":["import type {\n  ActJWTClaim,\n  experimental__CheckAuthorizationWithoutPermission,\n  GetToken,\n  MembershipRole,\n  SignOut,\n} from '@clerk/types';\nimport { useCallback } from 'react';\n\nimport { useAuthContext } from '../contexts/AuthContext';\nimport { useIsomorphicClerkContext } from '../contexts/IsomorphicClerkContext';\nimport { invalidStateError } from '../errors';\nimport type IsomorphicClerk from '../isomorphicClerk';\nimport { createGetToken, createSignOut } from './utils';\n\ntype experimental__CheckAuthorizationSignedOut = (\n  params?: Parameters<experimental__CheckAuthorizationWithoutPermission>[0],\n) => false;\n\ntype UseAuthReturn =\n  | {\n      isLoaded: false;\n      isSignedIn: undefined;\n      userId: undefined;\n      sessionId: undefined;\n      actor: undefined;\n      orgId: undefined;\n      orgRole: undefined;\n      orgSlug: undefined;\n      /**\n       * @experimental The method is experimental and subject to change in future releases.\n       */\n      experimental__has: experimental__CheckAuthorizationSignedOut;\n      signOut: SignOut;\n      getToken: GetToken;\n    }\n  | {\n      isLoaded: true;\n      isSignedIn: false;\n      userId: null;\n      sessionId: null;\n      actor: null;\n      orgId: null;\n      orgRole: null;\n      orgSlug: null;\n      /**\n       * @experimental The method is experimental and subject to change in future releases.\n       */\n      experimental__has: experimental__CheckAuthorizationSignedOut;\n      signOut: SignOut;\n      getToken: GetToken;\n    }\n  | {\n      isLoaded: true;\n      isSignedIn: true;\n      userId: string;\n      sessionId: string;\n      actor: ActJWTClaim | null;\n      orgId: null;\n      orgRole: null;\n      orgSlug: null;\n      /**\n       * @experimental The method is experimental and subject to change in future releases.\n       */\n      experimental__has: experimental__CheckAuthorizationSignedOut;\n      signOut: SignOut;\n      getToken: GetToken;\n    }\n  | {\n      isLoaded: true;\n      isSignedIn: true;\n      userId: string;\n      sessionId: string;\n      actor: ActJWTClaim | null;\n      orgId: string;\n      orgRole: MembershipRole;\n      orgSlug: string | null;\n      /**\n       * @experimental The method is experimental and subject to change in future releases.\n       */\n      experimental__has: experimental__CheckAuthorizationWithoutPermission;\n      signOut: SignOut;\n      getToken: GetToken;\n    };\n\ntype UseAuth = () => UseAuthReturn;\n\n/**\n * Returns the current auth state, the user and session ids and the `getToken`\n * that can be used to retrieve the given template or the default Clerk token.\n *\n * Until Clerk loads, `isLoaded` will be set to `false`.\n * Once Clerk loads, `isLoaded` will be set to `true`, and you can\n * safely access the `userId` and `sessionId` variables.\n *\n * For projects using NextJs or Remix, you can have immediate access to this data  during SSR\n * simply by using the `withServerSideAuth` helper.\n *\n * @example\n * A simple example:\n *\n * import { useAuth } from '@clerk/clerk-react'\n *\n * function Hello() {\n *   const { isSignedIn, sessionId, userId } = useAuth();\n *   if(isSignedIn) {\n *     return null;\n *   }\n *   console.log(sessionId, userId)\n *   return <div>...</div>\n * }\n *\n * @example\n * Basic example in a NextJs app. This page will be fully rendered during SSR:\n *\n * import { useAuth } from '@clerk/nextjs'\n * import { withServerSideAuth } from '@clerk/nextjs/api'\n *\n * export getServerSideProps = withServerSideAuth();\n *\n * export HelloPage = () => {\n *   const { isSignedIn, sessionId, userId } = useAuth();\n *   console.log(isSignedIn, sessionId, userId)\n *   return <div>...</div>\n * }\n */\nexport const useAuth: UseAuth = () => {\n  const { sessionId, userId, actor, orgId, orgRole, orgSlug } = useAuthContext();\n  const isomorphicClerk = useIsomorphicClerkContext() as unknown as IsomorphicClerk;\n\n  const getToken: GetToken = useCallback(createGetToken(isomorphicClerk), [isomorphicClerk]);\n  const signOut: SignOut = useCallback(createSignOut(isomorphicClerk), [isomorphicClerk]);\n\n  const has = useCallback(\n    (params?: Parameters<experimental__CheckAuthorizationWithoutPermission>[0]) => {\n      if (!orgId || !userId || !orgRole) {\n        return false;\n      }\n\n      if (!params) {\n        return false;\n      }\n\n      if (params.role) {\n        return orgRole === params.role;\n      }\n      return false;\n    },\n    [orgId, orgRole, userId],\n  );\n\n  if (sessionId === undefined && userId === undefined) {\n    return {\n      isLoaded: false,\n      isSignedIn: undefined,\n      sessionId,\n      userId,\n      actor: undefined,\n      orgId: undefined,\n      orgRole: undefined,\n      orgSlug: undefined,\n      experimental__has: () => false,\n      signOut,\n      getToken,\n    };\n  }\n\n  if (sessionId === null && userId === null) {\n    return {\n      isLoaded: true,\n      isSignedIn: false,\n      sessionId,\n      userId,\n      actor: null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      experimental__has: () => false,\n      signOut,\n      getToken,\n    };\n  }\n\n  if (!!sessionId && !!userId && !!orgId && !!orgRole) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId,\n      orgRole,\n      orgSlug: orgSlug || null,\n      experimental__has: has,\n      signOut,\n      getToken,\n    };\n  }\n\n  if (!!sessionId && !!userId && !orgId) {\n    return {\n      isLoaded: true,\n      isSignedIn: true,\n      sessionId,\n      userId,\n      actor: actor || null,\n      orgId: null,\n      orgRole: null,\n      orgSlug: null,\n      experimental__has: () => false,\n      signOut,\n      getToken,\n    };\n  }\n\n  throw new Error(invalidStateError);\n};\n"],"mappings":";AAOA,SAASA,WAAA,QAAmB;AAE5B,SAASC,cAAA,QAAsB;AAC/B,SAASC,yBAAA,QAAiC;AAC1C,SAASC,iBAAA,QAAyB;AAElC,SAASC,cAAA,EAAgBC,aAAA,QAAqB;AAiHvC,MAAMC,OAAA,GAAmBA,CAAA,KAAM;EACpC,MAAM;IAAEC,SAAA;IAAWC,MAAA;IAAQC,KAAA;IAAOC,KAAA;IAAOC,OAAA;IAASC;EAAQ,IAAIX,cAAA,CAAe;EAC7E,MAAMY,eAAA,GAAkBX,yBAAA,CAA0B;EAElD,MAAMY,QAAA,GAAqBd,WAAA,CAAYI,cAAA,CAAeS,eAAe,GAAG,CAACA,eAAe,CAAC;EACzF,MAAME,OAAA,GAAmBf,WAAA,CAAYK,aAAA,CAAcQ,eAAe,GAAG,CAACA,eAAe,CAAC;EAEtF,MAAMG,GAAA,GAAMhB,WAAA,CACTiB,MAAA,IAA8E;IAC7E,IAAI,CAACP,KAAA,IAAS,CAACF,MAAA,IAAU,CAACG,OAAA,EAAS;MACjC,OAAO;IACT;IAEA,IAAI,CAACM,MAAA,EAAQ;MACX,OAAO;IACT;IAEA,IAAIA,MAAA,CAAOC,IAAA,EAAM;MACf,OAAOP,OAAA,KAAYM,MAAA,CAAOC,IAAA;IAC5B;IACA,OAAO;EACT,GACA,CAACR,KAAA,EAAOC,OAAA,EAASH,MAAM,CACzB;EAEA,IAAID,SAAA,KAAc,UAAaC,MAAA,KAAW,QAAW;IACnD,OAAO;MACLW,QAAA,EAAU;MACVC,UAAA,EAAY;MACZb,SAAA;MACAC,MAAA;MACAC,KAAA,EAAO;MACPC,KAAA,EAAO;MACPC,OAAA,EAAS;MACTC,OAAA,EAAS;MACTS,iBAAA,EAAmBA,CAAA,KAAM;MACzBN,OAAA;MACAD;IACF;EACF;EAEA,IAAIP,SAAA,KAAc,QAAQC,MAAA,KAAW,MAAM;IACzC,OAAO;MACLW,QAAA,EAAU;MACVC,UAAA,EAAY;MACZb,SAAA;MACAC,MAAA;MACAC,KAAA,EAAO;MACPC,KAAA,EAAO;MACPC,OAAA,EAAS;MACTC,OAAA,EAAS;MACTS,iBAAA,EAAmBA,CAAA,KAAM;MACzBN,OAAA;MACAD;IACF;EACF;EAEA,IAAI,CAAC,CAACP,SAAA,IAAa,CAAC,CAACC,MAAA,IAAU,CAAC,CAACE,KAAA,IAAS,CAAC,CAACC,OAAA,EAAS;IACnD,OAAO;MACLQ,QAAA,EAAU;MACVC,UAAA,EAAY;MACZb,SAAA;MACAC,MAAA;MACAC,KAAA,EAAOA,KAAA,IAAS;MAChBC,KAAA;MACAC,OAAA;MACAC,OAAA,EAASA,OAAA,IAAW;MACpBS,iBAAA,EAAmBL,GAAA;MACnBD,OAAA;MACAD;IACF;EACF;EAEA,IAAI,CAAC,CAACP,SAAA,IAAa,CAAC,CAACC,MAAA,IAAU,CAACE,KAAA,EAAO;IACrC,OAAO;MACLS,QAAA,EAAU;MACVC,UAAA,EAAY;MACZb,SAAA;MACAC,MAAA;MACAC,KAAA,EAAOA,KAAA,IAAS;MAChBC,KAAA,EAAO;MACPC,OAAA,EAAS;MACTC,OAAA,EAAS;MACTS,iBAAA,EAAmBA,CAAA,KAAM;MACzBN,OAAA;MACAD;IACF;EACF;EAEA,MAAM,IAAIQ,KAAA,CAAMnB,iBAAiB;AACnC"},"metadata":{},"sourceType":"module","externalDependencies":[]}